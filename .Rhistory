library(conjoint)
library(xlsx)
setwd('C:/Users/nchandra/OneDrive - National University of Singapore/ComplexPredictiveMod/Day3/Workshop')
experiment <- expand.grid(
package = c('A','B','C'),
brand = c('K2R', 'Glory', 'Bissell'),
price = c('1.19', '1.39', '1.59'),
seal = c('no', 'yes'),
money = c('no', 'yes'))
design = caFactorialDesign(experiment, type = "orthogonal")
print(design)
code = caEncodedDesign(design) # encode choice sets
print(code)
print(cor(code))
set.seed(123)
survey <- sample(1:100, 36)
survey
pacman::p_load('tidyverse', 'conjoint', 'readxl', 'ggplot2', 'factoextra')
setwd('C:/Users/nchandra/OneDrive - National University of Singapore/ComplexPredictiveMod/Day3/Workshop')
factor = expand.grid(
package = c("A","B","C"),
brand = c("K2R", "Glory", "Bissell"),
price = c("$1.19", "$1.29", "$1.39"),
seal = c("Yes", "No"),
money = c("Yes", "No")
)
print(factor)
#1 Partial profile method
par_profile = caFactorialDesign(data = factor, type = 'fractional',cards = 22, seed = 123)
code = caEncodedDesign(par_profile)
encodedorthodesign <- data.frame(par_profile,code)
nrow(par_profile)
# all the attributes are independent from one another
cor(code)
#2 create a dataframe containing all the levels
levels = c("A", "B", "C", "K2R", "Glory", "Bissell", "$1.19", "$1.29", "$1.39","Yes", "No", "Yes", "No")
lev.df = data.frame(levels)
#3 Responses
survey = read_excel('Carpet_pref.xls')
head(survey)
dim(survey)
Conjoint(y= survey[,2:ncol(survey)], x = par_profile, z = lev.df, y.type = 'score')
caPartUtilities(y= survey[,2:ncol(survey)], x = par_profile, z = lev.df)
segments = caSegmentation(y= survey[,2:ncol(survey)], x = code, c= 3)
segments
clust = segments$segm
fviz_cluster(clust,segments$util)
library(conjoint)
library(xlsx)
setwd('C:/Users/nchandra/OneDrive - National University of Singapore/ComplexPredictiveMod/Day3/Workshop')
experiment <- expand.grid(
package = c('A','B','C'),
brand = c('K2R', 'Glory', 'Bissell'),
price = c('1.19', '1.39', '1.59'),
seal = c('no', 'yes'),
money = c('no', 'yes'))
design = caFactorialDesign(experiment, type = "orthogonal")
print(design)
code = caEncodedDesign(design) # encode choice sets
print(code)
print(cor(code))
set.seed(123)
survey <- sample(1:100, 36)
survey
pacman::p_load('tidyverse', 'conjoint', 'readxl', 'ggplot2', 'factoextra')
setwd('C:/Users/nchandra/OneDrive - National University of Singapore/ComplexPredictiveMod/Day3/Workshop')
factor = expand.grid(
package = c("A","B","C"),
brand = c("K2R", "Glory", "Bissell"),
price = c("$1.19", "$1.29", "$1.39"),
seal = c("Yes", "No"),
money = c("Yes", "No")
)
print(factor)
#1 Partial profile method
par_profile = caFactorialDesign(data = factor, type = 'fractional',cards = 22, seed = 123)
code = caEncodedDesign(par_profile)
encodedorthodesign <- data.frame(par_profile,code)
nrow(par_profile)
# all the attributes are independent from one another
cor(code)
#2 create a dataframe containing all the levels
levels = c("A", "B", "C", "K2R", "Glory", "Bissell", "$1.19", "$1.29", "$1.39","Yes", "No", "Yes", "No")
lev.df = data.frame(levels)
#3 Responses
survey = read_excel('Carpet_pref.xls')
head(survey)
dim(survey)
#Conjoint Analysis
Conjoint(y= survey[,2:ncol(survey)], x = par_profile, z = lev.df, y.type = 'score')
caModel(y = survey, x = code)
caModel(y = survey, x = par_profile)
caModel(y = survey[,2:ncol(survey)], x = par_profile)
caImportance(y = survey[,2:ncol(survey)], x= par_profile)
caModel(y = survey[,2:ncol(survey)], x = par_profile)
caModel(y = survey, x = par_profile)
par_profile
nrow(par_profile)
caPartUtilities(y= survey[,2:ncol(survey)], x = par_profile, z = lev.df)
#Conjoint Analysis
Conjoint(y= survey[,2:ncol(survey)], x = par_profile, z = lev.df, y.type = 'score')
pacman::p_load('tidyverse', 'conjoint', 'readxl', 'ggplot2', 'factoextra')
setwd('C:/Users/nchandra/OneDrive - National University of Singapore/ComplexPredictiveMod/Day3/Workshop')
factor = expand.grid(
package = c("A","B","C"),
brand = c("K2R", "Glory", "Bissell"),
price = c("$1.19", "$1.29", "$1.39"),
seal = c("Yes", "No"),
money = c("Yes", "No")
)
print(factor)
#1 Partial profile method
par_profile = caFactorialDesign(data = factor, type = 'fractional',cards = 22, seed = 123)
code = caEncodedDesign(par_profile)
encodedorthodesign <- data.frame(par_profile,code)
nrow(par_profile)
# all the attributes are independent from one another
cor(code)
#2 create a dataframe containing all the levels
levels = c("A", "B", "C", "K2R", "Glory", "Bissell", "$1.19", "$1.29", "$1.39","Yes", "No", "Yes", "No")
lev.df = data.frame(levels)
#3 Responses
survey = read_excel('Carpet_pref.xls')
head(survey)
dim(survey)
#Conjoint Analysis
Conjoint(y= survey[,2:ncol(survey)], x = par_profile, z = lev.df, y.type = 'score')
caPartUtilities(y= survey[,2:ncol(survey)], x = par_profile, z = lev.df)
caModel(y = survey, x = par_profile)
#caModel to estimate parameters of conjoint analysis model
caModel(y = survey[1,], x = par_profile)
survey[1,]
#caModel to estimate parameters of conjoint analysis model
caModel(y = survey[1,], x = par_profile)
#caModel to estimate parameters of conjoint analysis model
caModel(y = survey[2,], x = par_profile)
#caModel to estimate parameters of conjoint analysis model
caModel(y = survey[2,1], x = par_profile)
#caModel to estimate parameters of conjoint analysis model
caModel(y = survey[2], x = par_profile)
#caModel to estimate parameters of conjoint analysis model
caModel(y = survey[2,], x = par_profile)
#caModel to estimate parameters of conjoint analysis model
caModel(y = survey[1,], x = par_profile)
#caModel to estimate parameters of conjoint analysis model
caModel(y = survey[2,], x = par_profile)
caImportance(y = survey[,2:ncol(survey)], x = par_profile)
pacman::p_load('tidyverse', 'conjoint', 'readxl', 'ggplot2', 'factoextra')
setwd('C:/Users/nchandra/OneDrive - National University of Singapore/ComplexPredictiveMod/Day3/Workshop')
factor = expand.grid(
package = c("A","B","C"),
brand = c("K2R", "Glory", "Bissell"),
price = c("$1.19", "$1.29", "$1.39"),
seal = c("Yes", "No"),
money = c("Yes", "No")
)
print(factor)
#1 Partial profile method
par_profile = caFactorialDesign(data = factor, type = 'fractional',cards = 22, seed = 123)
code = caEncodedDesign(par_profile)
encodedorthodesign <- data.frame(par_profile,code)
nrow(par_profile)
# all the attributes are independent from one another
cor(code)
#2 create a dataframe containing all the levels
levels = c("A", "B", "C", "K2R", "Glory", "Bissell", "$1.19", "$1.29", "$1.39","Yes", "No", "Yes", "No")
lev.df = data.frame(levels)
#3 Responses
survey = read_excel('Carpet_pref.xls')
head(survey)
dim(survey)
#Conjoint Analysis
Conjoint(y= survey[,2:ncol(survey)], x = par_profile, z = lev.df, y.type = 'score')
